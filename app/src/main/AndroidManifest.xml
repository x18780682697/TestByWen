<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="wen.testbywen">
    <!-- 修改壁纸权限 -->
    <uses-permission android:name="android.permission.SET_WALLPAPER" /> <!-- 读写外置存储 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        tools:ignore="AllowBackup">

        <!--测试三方打开Activity-->
        <activity android:name="wen.test.thirdcall.TestThirdCallActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data android:scheme="file" />
                <data android:scheme="content" />
                <data android:host="*" />
                <data android:mimeType="*/*" />
                <!--增加文件后缀名条件-->
<!--                <data android:pathPattern=".*\\.7z" />-->
            </intent-filter>
        </activity>

        <activity android:name="wen.test.animation.TestLottieAnimActivity" />
        <activity android:name="wen.test.keyevent.TestListenKeyEvent" />
        <activity android:name="wen.test.recycleview.TestItemDeleteAnimationActivity" />
        <activity android:name="wen.test.coloruse.TestAndroidColorClassActivity" />
        <activity android:name="wen.test.navbar.TestNavigationBarControlActivity" />
        <activity android:name="wen.test.loaddex.TestDynamicLoadDexActivity" />
        <activity android:name="wen.test.textuse.CutTextIntoOneLineActivity" />
        <activity android:name="wen.test.statusbar.TransparentStatusAndNavigationBarActivity" />
        <activity android:name="wen.test.gituse.TestGitBranchActivity" />
        <activity android:name="wen.test.statusbar.Main4Activity" />
        <activity android:name="wen.test.animation.Main3Activity" />
        <activity android:name="wen.test.animation.Main2Activity" />
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <service android:name="wen.test.appguard.LocalService" />
        <service
            android:name="wen.test.appguard.RemoteService"
            android:process=":remote" />

        <!-- 声明widget对应的AppWidgetProvider -->
        <!--android:name属性声明的就是 Widget 所用的 AppWidgetProvider 类-->
        <receiver android:name="wen.test.widget.ExampleAppWidgetProvider">
            <intent-filter>
                <!--所有的窗口小部件都接收android.appwidget.action.APPWIDGET_UPDATE 动作的广播，
                该广播根据android:updatePeriodMillis设定的间隔时间发出广播，用于定时更新桌面上的所有窗口小部件。-->
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE"/>
                <!--定义一个自定义的动作广播，可以通过在该广播接收器中注册自定义的动作以使窗口小部件接收自定义的广播。-->
                <action android:name="com.skywang.widget.UPDATE_ALL"/>
            </intent-filter>
            <!--声明了 Widget 的 AppWidgetProviderInfo 对应的资源 xml 的位置，用的是 xml 目录下的 example_appwidget_info.xml。-->
            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/example_appwidget_info"/>
        </receiver>

    </application>

</manifest>